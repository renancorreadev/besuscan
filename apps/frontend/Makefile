# Frontend Makefile
.PHONY: help dev prod

# Docker Hub config
DOCKER_USER=besuscan
DEV_REPO=$(DOCKER_USER)/frontend-dev
PROD_REPO=$(DOCKER_USER)/frontend

# Vers√£o padr√£o para desenvolvimento
DEV_VERSION ?= v0.0.1

# Pega a vers√£o do primeiro argumento ap√≥s o target
VERSION = $(word 2,$(MAKECMDGOALS))
# Ignora argumentos desconhecidos
%:
	@:

# Cores para output
GREEN := \033[0;32m
RED := \033[0;31m
YELLOW := \033[0;33m
BLUE := \033[0;34m
NC := \033[0m

# Comandos Docker simplificados
dev: ## Build e push imagem de desenvolvimento
	@if [ -z "$(VERSION)" ]; then \
		VERSION=$(DEV_VERSION); \
	else \
		VERSION="v$(VERSION)"; \
	fi; \
	echo "$(GREEN)üê≥ Construindo imagem de desenvolvimento ($$VERSION)...$(NC)"; \
	docker build -t $(DEV_REPO):latest -f Dockerfile.dev .; \
	docker tag $(DEV_REPO):latest $(DEV_REPO):$$VERSION; \
	echo "$(GREEN)üê≥ Pushing imagem de desenvolvimento...$(NC)"; \
	docker push $(DEV_REPO):latest; \
	docker push $(DEV_REPO):$$VERSION; \
	echo "$(GREEN)‚úÖ Imagem de desenvolvimento publicada:$(NC)"; \
	echo "  ‚Ä¢ $(DEV_REPO):latest"; \
	echo "  ‚Ä¢ $(DEV_REPO):$$VERSION"

prod: ## Build e push imagem de produ√ß√£o
	@if [ -z "$(VERSION)" ]; then \
		echo "$(RED)‚ùå Vers√£o n√£o especificada. Use: make prod x.y.z$(NC)"; \
		exit 1; \
	fi
	@echo "$(GREEN)üê≥ Construindo imagem de produ√ß√£o (v$(VERSION))...$(NC)"
	@docker build -t $(PROD_REPO):latest -f Dockerfile .
	@docker tag $(PROD_REPO):latest $(PROD_REPO):v$(VERSION)
	@echo "$(GREEN)üê≥ Pushing imagem de produ√ß√£o...$(NC)"
	@docker push $(PROD_REPO):latest
	@docker push $(PROD_REPO):v$(VERSION)
	@echo "$(GREEN)‚úÖ Imagem de produ√ß√£o publicada:$(NC)"
	@echo "  ‚Ä¢ $(PROD_REPO):latest"
	@echo "  ‚Ä¢ $(PROD_REPO):v$(VERSION)"

help: ## Mostrar ajuda
	@echo "$(BLUE)üîß Comandos dispon√≠veis:$(NC)"
	@echo "  make dev 1.0.0             # Build e push da imagem de desenvolvimento"
	@echo "  make prod 1.0.0            # Build e push da imagem de produ√ß√£o" 