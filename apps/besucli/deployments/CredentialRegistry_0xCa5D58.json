{
  "address": "0xCa5D58D19775dE8e14CF8a1aEeC880f7cC31f902",
  "creation_block_number": 1626058,
  "creator_address": "0xFE3B557E8Fb62b89F4916B721be55cEb828dBd73",
  "deployment": {
    "name": "CredentialRegistry",
    "symbol": "DID",
    "description": "Smart Contract para registro e acompanhamento de credenciais",
    "contract_type": "VCA",
    "source_code": "// SPDX-License-Identifier: MIT\n\n// File contracts/IDBraDIDRegistry.sol\n\n// Original license: SPDX_License_Identifier: MIT\npragma solidity ^0.8.20;\n\n// File npm/@openzeppelin/contracts@5.4.0/access/IAccessControl.sol\n\n// Original license: SPDX_License_Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (access/IAccessControl.sol)\n\npragma solidity \u003e=0.8.4;\n\n/**\n * @dev External interface of AccessControl declared to support ERC-165 detection.\n */\ninterface IAccessControl {\n    /**\n     * @dev The `account` is missing a role.\n     */\n    error AccessControlUnauthorizedAccount(address account, bytes32 neededRole);\n\n    /**\n     * @dev The caller of a function is not the expected one.\n     *\n     * NOTE: Don't confuse with {AccessControlUnauthorizedAccount}.\n     */\n    error AccessControlBadConfirmation();\n\n    /**\n     * @dev Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole`\n     *\n     * `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite\n     * {RoleAdminChanged} not being emitted to signal this.\n     */\n    event RoleAdminChanged(bytes32 indexed role, bytes32 indexed previousAdminRole, bytes32 indexed newAdminRole);\n\n    /**\n     * @dev Emitted when `account` is granted `role`.\n     *\n     * `sender` is the account that originated the contract call. This account bears the admin role (for the granted role).\n     * Expected in cases where the role was granted using the internal {AccessControl-_grantRole}.\n     */\n    event RoleGranted(bytes32 indexed role, address indexed account, address indexed sender);\n\n    /**\n     * @dev Emitted when `account` is revoked `role`.\n     *\n     * `sender` is the account that originated the contract call:\n     *   - if using `revokeRole`, it is the admin role bearer\n     *   - if using `renounceRole`, it is the role bearer (i.e. `account`)\n     */\n    event RoleRevoked(bytes32 indexed role, address indexed account, address indexed sender);\n\n    /**\n     * @dev Returns `true` if `account` has been granted `role`.\n     */\n    function hasRole(bytes32 role, address account) external view returns (bool);\n\n    /**\n     * @dev Returns the admin role that controls `role`. See {grantRole} and\n     * {revokeRole}.\n     *\n     * To change a role's admin, use {AccessControl-_setRoleAdmin}.\n     */\n    function getRoleAdmin(bytes32 role) external view returns (bytes32);\n\n    /**\n     * @dev Grants `role` to `account`.\n     *\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     */\n    function grantRole(bytes32 role, address account) external;\n\n    /**\n     * @dev Revokes `role` from `account`.\n     *\n     * If `account` had been granted `role`, emits a {RoleRevoked} event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     */\n    function revokeRole(bytes32 role, address account) external;\n\n    /**\n     * @dev Revokes `role` from the calling account.\n     *\n     * Roles are often managed via {grantRole} and {revokeRole}: this function's\n     * purpose is to provide a mechanism for accounts to lose their privileges\n     * if they are compromised (such as when a trusted device is misplaced).\n     *\n     * If the calling account had been granted `role`, emits a {RoleRevoked}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must be `callerConfirmation`.\n     */\n    function renounceRole(bytes32 role, address callerConfirmation) external;\n}\n\n\n// File npm/@openzeppelin/contracts@5.4.0/utils/Context.sol\n\n// Original license: SPDX_License_Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n\n\n\n\n\n\n// File npm/@openzeppelin/contracts@5.4.0/utils/introspection/IERC165.sol\n\n// Original license: SPDX_License_Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (utils/introspection/IERC165.sol)\n\npragma solidity \u003e=0.4.16;\n\n/**\n * @dev Interface of the ERC-165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[ERC].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n\n// File npm/@openzeppelin/contracts@5.4.0/utils/introspection/ERC165.sol\n\n// Original license: SPDX_License_Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (utils/introspection/ERC165.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Implementation of the {IERC165} interface.\n *\n * Contracts that want to implement ERC-165 should inherit from this contract and override {supportsInterface} to check\n * for the additional interface id that will be supported. For example:\n *\n * ```solidity\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n * }\n * ```\n */\nabstract contract ERC165 is IERC165 {\n    /// @inheritdoc IERC165\n    function supportsInterface(bytes4 interfaceId) public view virtual returns (bool) {\n        return interfaceId == type(IERC165).interfaceId;\n    }\n}\n\n// File npm/@openzeppelin/contracts@5.4.0/access/AccessControl.sol\n\n// Original license: SPDX_License_Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (access/AccessControl.sol)\n\npragma solidity ^0.8.20;\n\n\n\n/**\n * @dev Contract module that allows children to implement role-based access\n * control mechanisms. This is a lightweight version that doesn't allow enumerating role\n * members except through off-chain means by accessing the contract event logs. Some\n * applications may benefit from on-chain enumerability, for those cases see\n * {AccessControlEnumerable}.\n *\n * Roles are referred to by their `bytes32` identifier. These should be exposed\n * in the external API and be unique. The best way to achieve this is by\n * using `public constant` hash digests:\n *\n * ```solidity\n * bytes32 public constant MY_ROLE = keccak256(\"MY_ROLE\");\n * ```\n *\n * Roles can be used to represent a set of permissions. To restrict access to a\n * function call, use {hasRole}:\n *\n * ```solidity\n * function foo() public {\n *     require(hasRole(MY_ROLE, msg.sender));\n *     ...\n * }\n * ```\n *\n * Roles can be granted and revoked dynamically via the {grantRole} and\n * {revokeRole} functions. Each role has an associated admin role, and only\n * accounts that have a role's admin role can call {grantRole} and {revokeRole}.\n *\n * By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means\n * that only accounts with this role will be able to grant or revoke other\n * roles. More complex role relationships can be created by using\n * {_setRoleAdmin}.\n *\n * WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to\n * grant and revoke this role. Extra precautions should be taken to secure\n * accounts that have been granted it. We recommend using {AccessControlDefaultAdminRules}\n * to enforce additional security measures for this role.\n */\nabstract contract AccessControl is Context, IAccessControl, ERC165 {\n    struct RoleData {\n        mapping(address account =\u003e bool) hasRole;\n        bytes32 adminRole;\n    }\n\n    mapping(bytes32 role =\u003e RoleData) private _roles;\n\n    bytes32 public constant DEFAULT_ADMIN_ROLE = 0x00;\n\n    /**\n     * @dev Modifier that checks that an account has a specific role. Reverts\n     * with an {AccessControlUnauthorizedAccount} error including the required role.\n     */\n    modifier onlyRole(bytes32 role) {\n        _checkRole(role);\n        _;\n    }\n\n    /// @inheritdoc IERC165\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n        return interfaceId == type(IAccessControl).interfaceId || super.supportsInterface(interfaceId);\n    }\n\n    /**\n     * @dev Returns `true` if `account` has been granted `role`.\n     */\n    function hasRole(bytes32 role, address account) public view virtual returns (bool) {\n        return _roles[role].hasRole[account];\n    }\n\n    /**\n     * @dev Reverts with an {AccessControlUnauthorizedAccount} error if `_msgSender()`\n     * is missing `role`. Overriding this function changes the behavior of the {onlyRole} modifier.\n     */\n    function _checkRole(bytes32 role) internal view virtual {\n        _checkRole(role, _msgSender());\n    }\n\n    /**\n     * @dev Reverts with an {AccessControlUnauthorizedAccount} error if `account`\n     * is missing `role`.\n     */\n    function _checkRole(bytes32 role, address account) internal view virtual {\n        if (!hasRole(role, account)) {\n            revert AccessControlUnauthorizedAccount(account, role);\n        }\n    }\n\n    /**\n     * @dev Returns the admin role that controls `role`. See {grantRole} and\n     * {revokeRole}.\n     *\n     * To change a role's admin, use {_setRoleAdmin}.\n     */\n    function getRoleAdmin(bytes32 role) public view virtual returns (bytes32) {\n        return _roles[role].adminRole;\n    }\n\n    /**\n     * @dev Grants `role` to `account`.\n     *\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     *\n     * May emit a {RoleGranted} event.\n     */\n    function grantRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {\n        _grantRole(role, account);\n    }\n\n    /**\n     * @dev Revokes `role` from `account`.\n     *\n     * If `account` had been granted `role`, emits a {RoleRevoked} event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     *\n     * May emit a {RoleRevoked} event.\n     */\n    function revokeRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {\n        _revokeRole(role, account);\n    }\n\n    /**\n     * @dev Revokes `role` from the calling account.\n     *\n     * Roles are often managed via {grantRole} and {revokeRole}: this function's\n     * purpose is to provide a mechanism for accounts to lose their privileges\n     * if they are compromised (such as when a trusted device is misplaced).\n     *\n     * If the calling account had been revoked `role`, emits a {RoleRevoked}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must be `callerConfirmation`.\n     *\n     * May emit a {RoleRevoked} event.\n     */\n    function renounceRole(bytes32 role, address callerConfirmation) public virtual {\n        if (callerConfirmation != _msgSender()) {\n            revert AccessControlBadConfirmation();\n        }\n\n        _revokeRole(role, callerConfirmation);\n    }\n\n    /**\n     * @dev Sets `adminRole` as ``role``'s admin role.\n     *\n     * Emits a {RoleAdminChanged} event.\n     */\n    function _setRoleAdmin(bytes32 role, bytes32 adminRole) internal virtual {\n        bytes32 previousAdminRole = getRoleAdmin(role);\n        _roles[role].adminRole = adminRole;\n        emit RoleAdminChanged(role, previousAdminRole, adminRole);\n    }\n\n    /**\n     * @dev Attempts to grant `role` to `account` and returns a boolean indicating if `role` was granted.\n     *\n     * Internal function without access restriction.\n     *\n     * May emit a {RoleGranted} event.\n     */\n    function _grantRole(bytes32 role, address account) internal virtual returns (bool) {\n        if (!hasRole(role, account)) {\n            _roles[role].hasRole[account] = true;\n            emit RoleGranted(role, account, _msgSender());\n            return true;\n        } else {\n            return false;\n        }\n    }\n\n    /**\n     * @dev Attempts to revoke `role` from `account` and returns a boolean indicating if `role` was revoked.\n     *\n     * Internal function without access restriction.\n     *\n     * May emit a {RoleRevoked} event.\n     */\n    function _revokeRole(bytes32 role, address account) internal virtual returns (bool) {\n        if (hasRole(role, account)) {\n            _roles[role].hasRole[account] = false;\n            emit RoleRevoked(role, account, _msgSender());\n            return true;\n        } else {\n            return false;\n        }\n    }\n}\n\n\n\n\n// File npm/@openzeppelin/contracts@5.4.0/utils/Pausable.sol\n\n// Original license: SPDX_License_Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.3.0) (utils/Pausable.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Contract module which allows children to implement an emergency stop\n * mechanism that can be triggered by an authorized account.\n *\n * This module is used through inheritance. It will make available the\n * modifiers `whenNotPaused` and `whenPaused`, which can be applied to\n * the functions of your contract. Note that they will not be pausable by\n * simply including this module, only once the modifiers are put in place.\n */\nabstract contract Pausable is Context {\n    bool private _paused;\n\n    /**\n     * @dev Emitted when the pause is triggered by `account`.\n     */\n    event Paused(address account);\n\n    /**\n     * @dev Emitted when the pause is lifted by `account`.\n     */\n    event Unpaused(address account);\n\n    /**\n     * @dev The operation failed because the contract is paused.\n     */\n    error EnforcedPause();\n\n    /**\n     * @dev The operation failed because the contract is not paused.\n     */\n    error ExpectedPause();\n\n    /**\n     * @dev Modifier to make a function callable only when the contract is not paused.\n     *\n     * Requirements:\n     *\n     * - The contract must not be paused.\n     */\n    modifier whenNotPaused() {\n        _requireNotPaused();\n        _;\n    }\n\n    /**\n     * @dev Modifier to make a function callable only when the contract is paused.\n     *\n     * Requirements:\n     *\n     * - The contract must be paused.\n     */\n    modifier whenPaused() {\n        _requirePaused();\n        _;\n    }\n\n    /**\n     * @dev Returns true if the contract is paused, and false otherwise.\n     */\n    function paused() public view virtual returns (bool) {\n        return _paused;\n    }\n\n    /**\n     * @dev Throws if the contract is paused.\n     */\n    function _requireNotPaused() internal view virtual {\n        if (paused()) {\n            revert EnforcedPause();\n        }\n    }\n\n    /**\n     * @dev Throws if the contract is not paused.\n     */\n    function _requirePaused() internal view virtual {\n        if (!paused()) {\n            revert ExpectedPause();\n        }\n    }\n\n    /**\n     * @dev Triggers stopped state.\n     *\n     * Requirements:\n     *\n     * - The contract must not be paused.\n     */\n    function _pause() internal virtual whenNotPaused {\n        _paused = true;\n        emit Paused(_msgSender());\n    }\n\n    /**\n     * @dev Returns to normal state.\n     *\n     * Requirements:\n     *\n     * - The contract must be paused.\n     */\n    function _unpause() internal virtual whenPaused {\n        _paused = false;\n        emit Unpaused(_msgSender());\n    }\n}\n\n\n// File npm/@openzeppelin/contracts@5.4.0/utils/ReentrancyGuard.sol\n\n// Original license: SPDX_License_Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/ReentrancyGuard.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Contract module that helps prevent reentrant calls to a function.\n *\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n * available, which can be applied to functions to make sure there are no nested\n * (reentrant) calls to them.\n *\n * Note that because there is a single `nonReentrant` guard, functions marked as\n * `nonReentrant` may not call one another. This can be worked around by making\n * those functions `private`, and then adding `external` `nonReentrant` entry\n * points to them.\n *\n * TIP: If EIP-1153 (transient storage) is available on the chain you're deploying at,\n * consider using {ReentrancyGuardTransient} instead.\n *\n * TIP: If you would like to learn more about reentrancy and alternative ways\n * to protect against it, check out our blog post\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\n */\nabstract contract ReentrancyGuard {\n    // Booleans are more expensive than uint256 or any type that takes up a full\n    // word because each write operation emits an extra SLOAD to first read the\n    // slot's contents, replace the bits taken up by the boolean, and then write\n    // back. This is the compiler's defense against contract upgrades and\n    // pointer aliasing, and it cannot be disabled.\n\n    // The values being non-zero value makes deployment a bit more expensive,\n    // but in exchange the refund on every call to nonReentrant will be lower in\n    // amount. Since refunds are capped to a percentage of the total\n    // transaction's gas, it is best to keep them low in cases like this one, to\n    // increase the likelihood of the full refund coming into effect.\n    uint256 private constant NOT_ENTERED = 1;\n    uint256 private constant ENTERED = 2;\n\n    uint256 private _status;\n\n    /**\n     * @dev Unauthorized reentrant call.\n     */\n    error ReentrancyGuardReentrantCall();\n\n    constructor() {\n        _status = NOT_ENTERED;\n    }\n\n    /**\n     * @dev Prevents a contract from calling itself, directly or indirectly.\n     * Calling a `nonReentrant` function from another `nonReentrant`\n     * function is not supported. It is possible to prevent this from happening\n     * by making the `nonReentrant` function external, and making it call a\n     * `private` function that does the actual work.\n     */\n    modifier nonReentrant() {\n        _nonReentrantBefore();\n        _;\n        _nonReentrantAfter();\n    }\n\n    function _nonReentrantBefore() private {\n        // On the first call to nonReentrant, _status will be NOT_ENTERED\n        if (_status == ENTERED) {\n            revert ReentrancyGuardReentrantCall();\n        }\n\n        // Any calls to nonReentrant after this point will fail\n        _status = ENTERED;\n    }\n\n    function _nonReentrantAfter() private {\n        // By storing the original value once again, a refund is triggered (see\n        // https://eips.ethereum.org/EIPS/eip-2200)\n        _status = NOT_ENTERED;\n    }\n\n    /**\n     * @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n     * `nonReentrant` function in the call stack.\n     */\n    function _reentrancyGuardEntered() internal view returns (bool) {\n        return _status == ENTERED;\n    }\n}\n\n\n/**\n * @title IDBraUnifiedRegistry\n * @notice Contrato unificado EIP-1056 + StatusList + Revogação para Hyperledger Besu\n * @dev Implementação completa para identidade digital bancária com máxima rastreabilidade\n */\n contract IDBraDIDRegistry is AccessControl, Pausable, ReentrancyGuard {\n\n    // ========= Roles =========\n    bytes32 public constant REGISTRAR_ROLE = keccak256(\"REGISTRAR_ROLE\");\n    bytes32 public constant ISSUER_ROLE = keccak256(\"ISSUER_ROLE\");\n    bytes32 public constant AUDITOR_ROLE = keccak256(\"AUDITOR_ROLE\");\n    bytes32 public constant EMERGENCY_ROLE = keccak256(\"EMERGENCY_ROLE\");\n\n    // ========= EIP-1056 Core State =========\n\n    /// @dev Mapeia identidade para delegates por tipo e validade (EIP-1056 padrão)\n    mapping(address =\u003e mapping(bytes32 =\u003e mapping(address =\u003e uint256))) public delegates;\n\n    /// @dev Último bloco que mudou cada identidade (EIP-1056 padrão)\n    mapping(address =\u003e uint256) public changed;\n\n    // ========= Identity Management State =========\n\n    /// @dev Status de verificação KYC para compliance bancária\n    mapping(address =\u003e bool) public isKYCVerified;\n\n    /// @dev Metadata IPFS para documentos DID W3C\n    mapping(address =\u003e string) public didDocuments;\n\n    /// @dev Controle de existência de DID\n    mapping(address =\u003e bool) public didExists;\n\n    /// @dev Timestamps para auditoria\n    mapping(address =\u003e uint256) public lastActivity;\n\n    // ========= Credential Revocation State =========\n\n    struct RevocationRecord {\n        bool revoked;\n        uint256 timestamp;\n        address revoker;\n        string reason;\n        bytes32 credentialHash; // Hash da credencial para verificação\n    }\n\n    /// @dev Registro de revogações de credenciais\n    mapping(bytes32 =\u003e RevocationRecord) public credentialRevocations;\n\n    /// @dev Mapeamento de identidade para suas credenciais\n    mapping(address =\u003e bytes32[]) public identityCredentials;\n\n    /// @dev Contador de credenciais por identidade\n    mapping(address =\u003e uint256) public credentialCount;\n\n\n\n    // ========= Metrics State =========\n\n    uint256 public totalDIDs;\n    uint256 public totalVerifiedDIDs;\n    uint256 public totalCredentials;\n    uint256 public totalRevokedCredentials;\n    uint256 public totalOperations;\n\n    // ========= EIP-1056 Standard Events =========\n\n    event DIDOwnerChanged(\n        address indexed identity,\n        address owner,\n        uint256 previousChange\n    );\n\n    event DIDDelegateChanged(\n        address indexed identity,\n        bytes32 delegateType,\n        address delegate,\n        uint256 validTo,\n        uint256 previousChange\n    );\n\n    event DIDAttributeChanged(\n        address indexed identity,\n        bytes32 name,\n        bytes value,\n        uint256 validTo,\n        uint256 previousChange\n    );\n\n    // ========= Identity Events =========\n\n    event DIDCreated(\n        address indexed identity,\n        address indexed creator,\n        string didDocument,\n        uint256 timestamp\n    );\n\n    event DIDUpdated(\n        address indexed identity,\n        address indexed updater,\n        string newDocument,\n        uint256 timestamp\n    );\n\n    event KYCStatusChanged(\n        address indexed identity,\n        bool verified,\n        address indexed verifier,\n        uint256 timestamp\n    );\n\n    // ========= Credential Events =========\n\n    event CredentialIssued(\n        bytes32 indexed credentialId,\n        address indexed issuer,\n        address indexed subject,\n        bytes32 credentialHash,\n        uint256 timestamp\n    );\n\n    event CredentialRevoked(\n        bytes32 indexed credentialId,\n        address indexed revoker,\n        address indexed subject,\n        string reason,\n        uint256 timestamp\n    );\n\n    event CredentialRestored(\n        bytes32 indexed credentialId,\n        address indexed restorer,\n        address indexed subject,\n        string reason,\n        uint256 timestamp\n    );\n\n    // ========= Audit Events =========\n\n    event BankingAuditLog(\n        address indexed identity,\n        string indexed action,\n        address indexed actor,\n        bytes32 dataHash,\n        uint256 timestamp\n    );\n\n    event SystemMetricsUpdated(\n        uint256 totalDIDs,\n        uint256 totalCredentials,\n        uint256 totalRevoked,\n        uint256 timestamp\n    );\n\n    // ========= Errors =========\n\n    error NotOwner();\n    error DIDAlreadyExists();\n    error DIDNotFound();\n    error InvalidDocument();\n    error CredentialAlreadyExists();\n    error CredentialNotFound();\n    error CredentialAlreadyRevoked();\n    error CredentialNotRevoked();\n\n    // ========= Modifiers =========\n\n    modifier onlyOwner(address identity, address actor) {\n        if (actor != identity) revert NotOwner();\n        _;\n    }\n\n    modifier didMustExist(address identity) {\n        if (!didExists[identity]) revert DIDNotFound();\n        _;\n    }\n\n    modifier credentialMustExist(bytes32 credentialId) {\n        if (credentialRevocations[credentialId].credentialHash == bytes32(0)) revert CredentialNotFound();\n        _;\n    }\n\n    // ========= Constructor =========\n\n    constructor(address admin) {\n        _grantRole(DEFAULT_ADMIN_ROLE, admin);\n        _grantRole(EMERGENCY_ROLE, admin);\n    }\n\n    // ========= EIP-1056 Core Functions =========\n\n    /**\n     * @notice Retorna o owner atual de uma identidade (EIP-1056)\n     */\n    function identityOwner(address identity) public pure returns (address) {\n        return identity;\n    }\n\n    /**\n     * @notice Verifica se address é delegate válido para identidade (EIP-1056)\n     */\n    function validDelegate(\n        address identity,\n        bytes32 delegateType,\n        address delegate\n    ) public view returns (bool) {\n        return delegates[identity][delegateType][delegate] \u003e= block.timestamp;\n    }\n\n    /**\n     * @notice Retorna timestamp de validade do delegate\n     */\n    function validDelegateFrom(\n        address identity,\n        bytes32 delegateType,\n        address delegate\n    ) public view returns (uint256) {\n        return delegates[identity][delegateType][delegate];\n    }\n\n    /**\n     * @notice Adiciona delegate para identidade (EIP-1056)\n     */\n    function addDelegate(\n        address identity,\n        bytes32 delegateType,\n        address delegate,\n        uint256 validity\n    ) external whenNotPaused onlyOwner(identity, msg.sender) didMustExist(identity) {\n        uint256 prev = changed[identity];\n        delegates[identity][delegateType][delegate] = block.timestamp + validity;\n        changed[identity] = block.number;\n        lastActivity[identity] = block.timestamp;\n        totalOperations++;\n\n        emit DIDDelegateChanged(identity, delegateType, delegate, block.timestamp + validity, prev);\n        emit BankingAuditLog(\n            identity,\n            \"DELEGATE_ADDED\",\n            msg.sender,\n            keccak256(abi.encodePacked(delegateType, delegate, validity)),\n            block.timestamp\n        );\n    }\n\n    /**\n     * @notice Remove delegate da identidade (EIP-1056)\n     */\n    function revokeDelegate(\n        address identity,\n        bytes32 delegateType,\n        address delegate\n    ) external whenNotPaused onlyOwner(identity, msg.sender) didMustExist(identity) {\n        uint256 prev = changed[identity];\n        delegates[identity][delegateType][delegate] = block.timestamp;\n        changed[identity] = block.number;\n        lastActivity[identity] = block.timestamp;\n        totalOperations++;\n\n        emit DIDDelegateChanged(identity, delegateType, delegate, block.timestamp, prev);\n        emit BankingAuditLog(\n            identity,\n            \"DELEGATE_REVOKED\",\n            msg.sender,\n            keccak256(abi.encodePacked(delegateType, delegate)),\n            block.timestamp\n        );\n    }\n\n    /**\n     * @notice Define atributo para identidade (EIP-1056)\n     */\n    function setAttribute(\n        address identity,\n        bytes32 name,\n        bytes calldata value,\n        uint256 validity\n    ) external whenNotPaused onlyOwner(identity, msg.sender) didMustExist(identity) {\n        uint256 prev = changed[identity];\n        changed[identity] = block.number;\n        lastActivity[identity] = block.timestamp;\n        totalOperations++;\n\n        emit DIDAttributeChanged(identity, name, value, block.timestamp + validity, prev);\n        emit BankingAuditLog(\n            identity,\n            \"ATTRIBUTE_SET\",\n            msg.sender,\n            keccak256(abi.encodePacked(name, value)),\n            block.timestamp\n        );\n    }\n\n    /**\n     * @notice Remove atributo da identidade (EIP-1056)\n     */\n    function revokeAttribute(\n        address identity,\n        bytes32 name,\n        bytes calldata value\n    ) external whenNotPaused onlyOwner(identity, msg.sender) didMustExist(identity) {\n        uint256 prev = changed[identity];\n        changed[identity] = block.number;\n        lastActivity[identity] = block.timestamp;\n        totalOperations++;\n\n        emit DIDAttributeChanged(identity, name, value, 0, prev);\n        emit BankingAuditLog(\n            identity,\n            \"ATTRIBUTE_REVOKED\",\n            msg.sender,\n            keccak256(abi.encodePacked(name, value)),\n            block.timestamp\n        );\n    }\n\n    // ========= Identity Management Functions =========\n\n    /**\n     * @notice Cria nova identidade DID\n     */\n    function createDID(\n        address identity,\n        string calldata didDocument\n    ) external whenNotPaused nonReentrant returns (bool) {\n        if (didExists[identity]) revert DIDAlreadyExists();\n        if (bytes(didDocument).length == 0) revert InvalidDocument();\n\n        didExists[identity] = true;\n        didDocuments[identity] = didDocument;\n        lastActivity[identity] = block.timestamp;\n\n        totalDIDs++;\n        totalOperations++;\n\n        uint256 prev = changed[identity];\n        changed[identity] = block.number;\n\n        emit DIDCreated(identity, msg.sender, didDocument, block.timestamp);\n        emit DIDOwnerChanged(identity, identity, prev);\n        emit BankingAuditLog(\n            identity,\n            \"DID_CREATED\",\n            msg.sender,\n            keccak256(bytes(didDocument)),\n            block.timestamp\n        );\n\n        return true;\n    }\n\n    /**\n     * @notice Atualiza documento DID\n     */\n    function updateDIDDocument(\n        address identity,\n        string calldata newDidDocument\n    ) external whenNotPaused onlyOwner(identity, msg.sender) didMustExist(identity) {\n        if (bytes(newDidDocument).length == 0) revert InvalidDocument();\n\n        string memory oldDocument = didDocuments[identity];\n        didDocuments[identity] = newDidDocument;\n        lastActivity[identity] = block.timestamp;\n        totalOperations++;\n\n        emit DIDUpdated(identity, msg.sender, newDidDocument, block.timestamp);\n        emit BankingAuditLog(\n            identity,\n            \"DID_UPDATED\",\n            msg.sender,\n            keccak256(abi.encodePacked(oldDocument, newDidDocument)),\n            block.timestamp\n        );\n    }\n\n    /**\n     * @notice Define status KYC\n     */\n    function setKYCStatus(\n        address identity,\n        bool verified\n    ) external whenNotPaused onlyRole(REGISTRAR_ROLE) didMustExist(identity) {\n        bool wasVerified = isKYCVerified[identity];\n        isKYCVerified[identity] = verified;\n        lastActivity[identity] = block.timestamp;\n        totalOperations++;\n\n        if (verified \u0026\u0026 !wasVerified) {\n            totalVerifiedDIDs++;\n        } else if (!verified \u0026\u0026 wasVerified) {\n            totalVerifiedDIDs--;\n        }\n\n        emit KYCStatusChanged(identity, verified, msg.sender, block.timestamp);\n        emit BankingAuditLog(\n            identity,\n            verified ? \"KYC_VERIFIED\" : \"KYC_REVOKED\",\n            msg.sender,\n            keccak256(abi.encodePacked(verified, wasVerified)),\n            block.timestamp\n        );\n    }\n\n    // ========= Credential Management Functions =========\n\n    /**\n     * @notice Registra uma nova credencial\n     */\n    function issueCredential(\n        bytes32 credentialId,\n        address subject,\n        bytes32 credentialHash\n    ) external whenNotPaused onlyRole(ISSUER_ROLE) didMustExist(subject) returns (bool) {\n        if (credentialRevocations[credentialId].credentialHash != bytes32(0)) revert CredentialAlreadyExists();\n\n        credentialRevocations[credentialId] = RevocationRecord({\n            revoked: false,\n            timestamp: block.timestamp,\n            revoker: msg.sender,\n            reason: \"\",\n            credentialHash: credentialHash\n        });\n\n        identityCredentials[subject].push(credentialId);\n        credentialCount[subject]++;\n        totalCredentials++;\n        totalOperations++;\n\n        emit CredentialIssued(credentialId, msg.sender, subject, credentialHash, block.timestamp);\n        emit BankingAuditLog(\n            subject,\n            \"CREDENTIAL_ISSUED\",\n            msg.sender,\n            credentialHash,\n            block.timestamp\n        );\n\n        return true;\n    }\n\n    /**\n     * @notice Revoga uma credencial\n     */\n    function revokeCredential(\n        bytes32 credentialId,\n        address subject,\n        string calldata reason\n    ) external whenNotPaused onlyRole(ISSUER_ROLE) credentialMustExist(credentialId) {\n        RevocationRecord storage record = credentialRevocations[credentialId];\n        if (record.revoked) revert CredentialAlreadyRevoked();\n\n        record.revoked = true;\n        record.timestamp = block.timestamp;\n        record.revoker = msg.sender;\n        record.reason = reason;\n\n        totalRevokedCredentials++;\n        totalOperations++;\n\n        emit CredentialRevoked(credentialId, msg.sender, subject, reason, block.timestamp);\n        emit BankingAuditLog(\n            subject,\n            \"CREDENTIAL_REVOKED\",\n            msg.sender,\n            keccak256(abi.encodePacked(credentialId, reason)),\n            block.timestamp\n        );\n    }\n\n    /**\n     * @notice Restaura uma credencial revogada\n     */\n    function restoreCredential(\n        bytes32 credentialId,\n        address subject,\n        string calldata reason\n    ) external whenNotPaused onlyRole(ISSUER_ROLE) credentialMustExist(credentialId) {\n        RevocationRecord storage record = credentialRevocations[credentialId];\n        if (!record.revoked) revert CredentialNotRevoked();\n\n        record.revoked = false;\n        record.timestamp = block.timestamp;\n        record.revoker = msg.sender;\n        record.reason = reason;\n\n        totalRevokedCredentials--;\n        totalOperations++;\n\n        emit CredentialRestored(credentialId, msg.sender, subject, reason, block.timestamp);\n        emit BankingAuditLog(\n            subject,\n            \"CREDENTIAL_RESTORED\",\n            msg.sender,\n            keccak256(abi.encodePacked(credentialId, reason)),\n            block.timestamp\n        );\n    }\n\n    /**\n     * @notice Verifica se uma credencial está revogada\n     */\n    function isCredentialRevoked(bytes32 credentialId) external view returns (bool) {\n        return credentialRevocations[credentialId].revoked;\n    }\n\n    // ========= View Functions =========\n\n    /**\n     * @notice Retorna informações completas da identidade\n     */\n    function getIdentityInfo(address identity) external view returns (\n        address owner,\n        string memory didDocument,\n        bool kycVerified,\n        uint256 lastActivityTime,\n        uint256 lastChanged,\n        uint256 credentialCountForIdentity\n    ) {\n        return (\n            identity,\n            didDocuments[identity],\n            isKYCVerified[identity],\n            lastActivity[identity],\n            changed[identity],\n            credentialCount[identity]\n        );\n    }\n\n    /**\n     * @notice Retorna registro de revogação de credencial\n     */\n    function getCredentialRevocation(bytes32 credentialId) external view returns (RevocationRecord memory) {\n        return credentialRevocations[credentialId];\n    }\n\n    /**\n     * @notice Retorna credenciais de uma identidade\n     */\n    function getIdentityCredentials(address identity) external view returns (bytes32[] memory) {\n        return identityCredentials[identity];\n    }\n\n    /**\n     * @notice Retorna métricas do sistema\n     */\n    function getSystemMetrics() external view returns (\n        uint256 totalDIDCount,\n        uint256 totalVerifiedDIDCount,\n        uint256 totalCredentialCount,\n        uint256 totalRevokedCredentialCount,\n        uint256 totalOperationCount\n    ) {\n        return (\n            totalDIDs,\n            totalVerifiedDIDs,\n            totalCredentials,\n            totalRevokedCredentials,\n            totalOperations\n        );\n    }\n\n    /**\n     * @notice Verifica se DID existe\n     */\n    function exists(address identity) external view returns (bool) {\n        return didExists[identity];\n    }\n\n    // ========= Admin Functions =========\n\n    function pause() external onlyRole(EMERGENCY_ROLE) {\n        _pause();\n        emit BankingAuditLog(msg.sender, \"SYSTEM_PAUSED\", msg.sender, bytes32(0), block.timestamp);\n    }\n\n    function unpause() external onlyRole(DEFAULT_ADMIN_ROLE) {\n        _unpause();\n        emit BankingAuditLog(msg.sender, \"SYSTEM_UNPAUSED\", msg.sender, bytes32(0), block.timestamp);\n    }\n}\n",
    "abi": [
      {
        "inputs": [
          {
            "internalType": "address",
            "name": "admin",
            "type": "address"
          }
        ],
        "stateMutability": "nonpayable",
        "type": "constructor"
      },
      {
        "inputs": [],
        "name": "AccessControlBadConfirmation",
        "type": "error"
      },
      {
        "inputs": [
          {
            "internalType": "address",
            "name": "account",
            "type": "address"
          },
          {
            "internalType": "bytes32",
            "name": "neededRole",
            "type": "bytes32"
          }
        ],
        "name": "AccessControlUnauthorizedAccount",
        "type": "error"
      },
      {
        "inputs": [],
        "name": "CredentialAlreadyExists",
        "type": "error"
      },
      {
        "inputs": [],
        "name": "CredentialAlreadyRevoked",
        "type": "error"
      },
      {
        "inputs": [],
        "name": "CredentialNotFound",
        "type": "error"
      },
      {
        "inputs": [],
        "name": "CredentialNotRevoked",
        "type": "error"
      },
      {
        "inputs": [],
        "name": "DIDAlreadyExists",
        "type": "error"
      },
      {
        "inputs": [],
        "name": "DIDNotFound",
        "type": "error"
      },
      {
        "inputs": [],
        "name": "EnforcedPause",
        "type": "error"
      },
      {
        "inputs": [],
        "name": "ExpectedPause",
        "type": "error"
      },
      {
        "inputs": [],
        "name": "InvalidDocument",
        "type": "error"
      },
      {
        "inputs": [],
        "name": "NotOwner",
        "type": "error"
      },
      {
        "inputs": [],
        "name": "ReentrancyGuardReentrantCall",
        "type": "error"
      },
      {
        "anonymous": false,
        "inputs": [
          {
            "indexed": true,
            "internalType": "address",
            "name": "identity",
            "type": "address"
          },
          {
            "indexed": true,
            "internalType": "string",
            "name": "action",
            "type": "string"
          },
          {
            "indexed": true,
            "internalType": "address",
            "name": "actor",
            "type": "address"
          },
          {
            "indexed": false,
            "internalType": "bytes32",
            "name": "dataHash",
            "type": "bytes32"
          },
          {
            "indexed": false,
            "internalType": "uint256",
            "name": "timestamp",
            "type": "uint256"
          }
        ],
        "name": "BankingAuditLog",
        "type": "event"
      },
      {
        "anonymous": false,
        "inputs": [
          {
            "indexed": true,
            "internalType": "bytes32",
            "name": "credentialId",
            "type": "bytes32"
          },
          {
            "indexed": true,
            "internalType": "address",
            "name": "issuer",
            "type": "address"
          },
          {
            "indexed": true,
            "internalType": "address",
            "name": "subject",
            "type": "address"
          },
          {
            "indexed": false,
            "internalType": "bytes32",
            "name": "credentialHash",
            "type": "bytes32"
          },
          {
            "indexed": false,
            "internalType": "uint256",
            "name": "timestamp",
            "type": "uint256"
          }
        ],
        "name": "CredentialIssued",
        "type": "event"
      },
      {
        "anonymous": false,
        "inputs": [
          {
            "indexed": true,
            "internalType": "bytes32",
            "name": "credentialId",
            "type": "bytes32"
          },
          {
            "indexed": true,
            "internalType": "address",
            "name": "restorer",
            "type": "address"
          },
          {
            "indexed": true,
            "internalType": "address",
            "name": "subject",
            "type": "address"
          },
          {
            "indexed": false,
            "internalType": "string",
            "name": "reason",
            "type": "string"
          },
          {
            "indexed": false,
            "internalType": "uint256",
            "name": "timestamp",
            "type": "uint256"
          }
        ],
        "name": "CredentialRestored",
        "type": "event"
      },
      {
        "anonymous": false,
        "inputs": [
          {
            "indexed": true,
            "internalType": "bytes32",
            "name": "credentialId",
            "type": "bytes32"
          },
          {
            "indexed": true,
            "internalType": "address",
            "name": "revoker",
            "type": "address"
          },
          {
            "indexed": true,
            "internalType": "address",
            "name": "subject",
            "type": "address"
          },
          {
            "indexed": false,
            "internalType": "string",
            "name": "reason",
            "type": "string"
          },
          {
            "indexed": false,
            "internalType": "uint256",
            "name": "timestamp",
            "type": "uint256"
          }
        ],
        "name": "CredentialRevoked",
        "type": "event"
      },
      {
        "anonymous": false,
        "inputs": [
          {
            "indexed": true,
            "internalType": "address",
            "name": "identity",
            "type": "address"
          },
          {
            "indexed": false,
            "internalType": "bytes32",
            "name": "name",
            "type": "bytes32"
          },
          {
            "indexed": false,
            "internalType": "bytes",
            "name": "value",
            "type": "bytes"
          },
          {
            "indexed": false,
            "internalType": "uint256",
            "name": "validTo",
            "type": "uint256"
          },
          {
            "indexed": false,
            "internalType": "uint256",
            "name": "previousChange",
            "type": "uint256"
          }
        ],
        "name": "DIDAttributeChanged",
        "type": "event"
      },
      {
        "anonymous": false,
        "inputs": [
          {
            "indexed": true,
            "internalType": "address",
            "name": "identity",
            "type": "address"
          },
          {
            "indexed": true,
            "internalType": "address",
            "name": "creator",
            "type": "address"
          },
          {
            "indexed": false,
            "internalType": "string",
            "name": "didDocument",
            "type": "string"
          },
          {
            "indexed": false,
            "internalType": "uint256",
            "name": "timestamp",
            "type": "uint256"
          }
        ],
        "name": "DIDCreated",
        "type": "event"
      },
      {
        "anonymous": false,
        "inputs": [
          {
            "indexed": true,
            "internalType": "address",
            "name": "identity",
            "type": "address"
          },
          {
            "indexed": false,
            "internalType": "bytes32",
            "name": "delegateType",
            "type": "bytes32"
          },
          {
            "indexed": false,
            "internalType": "address",
            "name": "delegate",
            "type": "address"
          },
          {
            "indexed": false,
            "internalType": "uint256",
            "name": "validTo",
            "type": "uint256"
          },
          {
            "indexed": false,
            "internalType": "uint256",
            "name": "previousChange",
            "type": "uint256"
          }
        ],
        "name": "DIDDelegateChanged",
        "type": "event"
      },
      {
        "anonymous": false,
        "inputs": [
          {
            "indexed": true,
            "internalType": "address",
            "name": "identity",
            "type": "address"
          },
          {
            "indexed": false,
            "internalType": "address",
            "name": "owner",
            "type": "address"
          },
          {
            "indexed": false,
            "internalType": "uint256",
            "name": "previousChange",
            "type": "uint256"
          }
        ],
        "name": "DIDOwnerChanged",
        "type": "event"
      },
      {
        "anonymous": false,
        "inputs": [
          {
            "indexed": true,
            "internalType": "address",
            "name": "identity",
            "type": "address"
          },
          {
            "indexed": true,
            "internalType": "address",
            "name": "updater",
            "type": "address"
          },
          {
            "indexed": false,
            "internalType": "string",
            "name": "newDocument",
            "type": "string"
          },
          {
            "indexed": false,
            "internalType": "uint256",
            "name": "timestamp",
            "type": "uint256"
          }
        ],
        "name": "DIDUpdated",
        "type": "event"
      },
      {
        "anonymous": false,
        "inputs": [
          {
            "indexed": true,
            "internalType": "address",
            "name": "identity",
            "type": "address"
          },
          {
            "indexed": false,
            "internalType": "bool",
            "name": "verified",
            "type": "bool"
          },
          {
            "indexed": true,
            "internalType": "address",
            "name": "verifier",
            "type": "address"
          },
          {
            "indexed": false,
            "internalType": "uint256",
            "name": "timestamp",
            "type": "uint256"
          }
        ],
        "name": "KYCStatusChanged",
        "type": "event"
      },
      {
        "anonymous": false,
        "inputs": [
          {
            "indexed": false,
            "internalType": "address",
            "name": "account",
            "type": "address"
          }
        ],
        "name": "Paused",
        "type": "event"
      },
      {
        "anonymous": false,
        "inputs": [
          {
            "indexed": true,
            "internalType": "bytes32",
            "name": "role",
            "type": "bytes32"
          },
          {
            "indexed": true,
            "internalType": "bytes32",
            "name": "previousAdminRole",
            "type": "bytes32"
          },
          {
            "indexed": true,
            "internalType": "bytes32",
            "name": "newAdminRole",
            "type": "bytes32"
          }
        ],
        "name": "RoleAdminChanged",
        "type": "event"
      },
      {
        "anonymous": false,
        "inputs": [
          {
            "indexed": true,
            "internalType": "bytes32",
            "name": "role",
            "type": "bytes32"
          },
          {
            "indexed": true,
            "internalType": "address",
            "name": "account",
            "type": "address"
          },
          {
            "indexed": true,
            "internalType": "address",
            "name": "sender",
            "type": "address"
          }
        ],
        "name": "RoleGranted",
        "type": "event"
      },
      {
        "anonymous": false,
        "inputs": [
          {
            "indexed": true,
            "internalType": "bytes32",
            "name": "role",
            "type": "bytes32"
          },
          {
            "indexed": true,
            "internalType": "address",
            "name": "account",
            "type": "address"
          },
          {
            "indexed": true,
            "internalType": "address",
            "name": "sender",
            "type": "address"
          }
        ],
        "name": "RoleRevoked",
        "type": "event"
      },
      {
        "anonymous": false,
        "inputs": [
          {
            "indexed": false,
            "internalType": "uint256",
            "name": "totalDIDs",
            "type": "uint256"
          },
          {
            "indexed": false,
            "internalType": "uint256",
            "name": "totalCredentials",
            "type": "uint256"
          },
          {
            "indexed": false,
            "internalType": "uint256",
            "name": "totalRevoked",
            "type": "uint256"
          },
          {
            "indexed": false,
            "internalType": "uint256",
            "name": "timestamp",
            "type": "uint256"
          }
        ],
        "name": "SystemMetricsUpdated",
        "type": "event"
      },
      {
        "anonymous": false,
        "inputs": [
          {
            "indexed": false,
            "internalType": "address",
            "name": "account",
            "type": "address"
          }
        ],
        "name": "Unpaused",
        "type": "event"
      },
      {
        "inputs": [],
        "name": "AUDITOR_ROLE",
        "outputs": [
          {
            "internalType": "bytes32",
            "name": "",
            "type": "bytes32"
          }
        ],
        "stateMutability": "view",
        "type": "function"
      },
      {
        "inputs": [],
        "name": "DEFAULT_ADMIN_ROLE",
        "outputs": [
          {
            "internalType": "bytes32",
            "name": "",
            "type": "bytes32"
          }
        ],
        "stateMutability": "view",
        "type": "function"
      },
      {
        "inputs": [],
        "name": "EMERGENCY_ROLE",
        "outputs": [
          {
            "internalType": "bytes32",
            "name": "",
            "type": "bytes32"
          }
        ],
        "stateMutability": "view",
        "type": "function"
      },
      {
        "inputs": [],
        "name": "ISSUER_ROLE",
        "outputs": [
          {
            "internalType": "bytes32",
            "name": "",
            "type": "bytes32"
          }
        ],
        "stateMutability": "view",
        "type": "function"
      },
      {
        "inputs": [],
        "name": "REGISTRAR_ROLE",
        "outputs": [
          {
            "internalType": "bytes32",
            "name": "",
            "type": "bytes32"
          }
        ],
        "stateMutability": "view",
        "type": "function"
      },
      {
        "inputs": [
          {
            "internalType": "address",
            "name": "identity",
            "type": "address"
          },
          {
            "internalType": "bytes32",
            "name": "delegateType",
            "type": "bytes32"
          },
          {
            "internalType": "address",
            "name": "delegate",
            "type": "address"
          },
          {
            "internalType": "uint256",
            "name": "validity",
            "type": "uint256"
          }
        ],
        "name": "addDelegate",
        "outputs": [],
        "stateMutability": "nonpayable",
        "type": "function"
      },
      {
        "inputs": [
          {
            "internalType": "address",
            "name": "",
            "type": "address"
          }
        ],
        "name": "changed",
        "outputs": [
          {
            "internalType": "uint256",
            "name": "",
            "type": "uint256"
          }
        ],
        "stateMutability": "view",
        "type": "function"
      },
      {
        "inputs": [
          {
            "internalType": "address",
            "name": "identity",
            "type": "address"
          },
          {
            "internalType": "string",
            "name": "didDocument",
            "type": "string"
          }
        ],
        "name": "createDID",
        "outputs": [
          {
            "internalType": "bool",
            "name": "",
            "type": "bool"
          }
        ],
        "stateMutability": "nonpayable",
        "type": "function"
      },
      {
        "inputs": [
          {
            "internalType": "address",
            "name": "",
            "type": "address"
          }
        ],
        "name": "credentialCount",
        "outputs": [
          {
            "internalType": "uint256",
            "name": "",
            "type": "uint256"
          }
        ],
        "stateMutability": "view",
        "type": "function"
      },
      {
        "inputs": [
          {
            "internalType": "bytes32",
            "name": "",
            "type": "bytes32"
          }
        ],
        "name": "credentialRevocations",
        "outputs": [
          {
            "internalType": "bool",
            "name": "revoked",
            "type": "bool"
          },
          {
            "internalType": "uint256",
            "name": "timestamp",
            "type": "uint256"
          },
          {
            "internalType": "address",
            "name": "revoker",
            "type": "address"
          },
          {
            "internalType": "string",
            "name": "reason",
            "type": "string"
          },
          {
            "internalType": "bytes32",
            "name": "credentialHash",
            "type": "bytes32"
          }
        ],
        "stateMutability": "view",
        "type": "function"
      },
      {
        "inputs": [
          {
            "internalType": "address",
            "name": "",
            "type": "address"
          },
          {
            "internalType": "bytes32",
            "name": "",
            "type": "bytes32"
          },
          {
            "internalType": "address",
            "name": "",
            "type": "address"
          }
        ],
        "name": "delegates",
        "outputs": [
          {
            "internalType": "uint256",
            "name": "",
            "type": "uint256"
          }
        ],
        "stateMutability": "view",
        "type": "function"
      },
      {
        "inputs": [
          {
            "internalType": "address",
            "name": "",
            "type": "address"
          }
        ],
        "name": "didDocuments",
        "outputs": [
          {
            "internalType": "string",
            "name": "",
            "type": "string"
          }
        ],
        "stateMutability": "view",
        "type": "function"
      },
      {
        "inputs": [
          {
            "internalType": "address",
            "name": "",
            "type": "address"
          }
        ],
        "name": "didExists",
        "outputs": [
          {
            "internalType": "bool",
            "name": "",
            "type": "bool"
          }
        ],
        "stateMutability": "view",
        "type": "function"
      },
      {
        "inputs": [
          {
            "internalType": "address",
            "name": "identity",
            "type": "address"
          }
        ],
        "name": "exists",
        "outputs": [
          {
            "internalType": "bool",
            "name": "",
            "type": "bool"
          }
        ],
        "stateMutability": "view",
        "type": "function"
      },
      {
        "inputs": [
          {
            "internalType": "bytes32",
            "name": "credentialId",
            "type": "bytes32"
          }
        ],
        "name": "getCredentialRevocation",
        "outputs": [
          {
            "components": [
              {
                "internalType": "bool",
                "name": "revoked",
                "type": "bool"
              },
              {
                "internalType": "uint256",
                "name": "timestamp",
                "type": "uint256"
              },
              {
                "internalType": "address",
                "name": "revoker",
                "type": "address"
              },
              {
                "internalType": "string",
                "name": "reason",
                "type": "string"
              },
              {
                "internalType": "bytes32",
                "name": "credentialHash",
                "type": "bytes32"
              }
            ],
            "internalType": "struct IDBraDIDRegistry.RevocationRecord",
            "name": "",
            "type": "tuple"
          }
        ],
        "stateMutability": "view",
        "type": "function"
      },
      {
        "inputs": [
          {
            "internalType": "address",
            "name": "identity",
            "type": "address"
          }
        ],
        "name": "getIdentityCredentials",
        "outputs": [
          {
            "internalType": "bytes32[]",
            "name": "",
            "type": "bytes32[]"
          }
        ],
        "stateMutability": "view",
        "type": "function"
      },
      {
        "inputs": [
          {
            "internalType": "address",
            "name": "identity",
            "type": "address"
          }
        ],
        "name": "getIdentityInfo",
        "outputs": [
          {
            "internalType": "address",
            "name": "owner",
            "type": "address"
          },
          {
            "internalType": "string",
            "name": "didDocument",
            "type": "string"
          },
          {
            "internalType": "bool",
            "name": "kycVerified",
            "type": "bool"
          },
          {
            "internalType": "uint256",
            "name": "lastActivityTime",
            "type": "uint256"
          },
          {
            "internalType": "uint256",
            "name": "lastChanged",
            "type": "uint256"
          },
          {
            "internalType": "uint256",
            "name": "credentialCountForIdentity",
            "type": "uint256"
          }
        ],
        "stateMutability": "view",
        "type": "function"
      },
      {
        "inputs": [
          {
            "internalType": "bytes32",
            "name": "role",
            "type": "bytes32"
          }
        ],
        "name": "getRoleAdmin",
        "outputs": [
          {
            "internalType": "bytes32",
            "name": "",
            "type": "bytes32"
          }
        ],
        "stateMutability": "view",
        "type": "function"
      },
      {
        "inputs": [],
        "name": "getSystemMetrics",
        "outputs": [
          {
            "internalType": "uint256",
            "name": "totalDIDCount",
            "type": "uint256"
          },
          {
            "internalType": "uint256",
            "name": "totalVerifiedDIDCount",
            "type": "uint256"
          },
          {
            "internalType": "uint256",
            "name": "totalCredentialCount",
            "type": "uint256"
          },
          {
            "internalType": "uint256",
            "name": "totalRevokedCredentialCount",
            "type": "uint256"
          },
          {
            "internalType": "uint256",
            "name": "totalOperationCount",
            "type": "uint256"
          }
        ],
        "stateMutability": "view",
        "type": "function"
      },
      {
        "inputs": [
          {
            "internalType": "bytes32",
            "name": "role",
            "type": "bytes32"
          },
          {
            "internalType": "address",
            "name": "account",
            "type": "address"
          }
        ],
        "name": "grantRole",
        "outputs": [],
        "stateMutability": "nonpayable",
        "type": "function"
      },
      {
        "inputs": [
          {
            "internalType": "bytes32",
            "name": "role",
            "type": "bytes32"
          },
          {
            "internalType": "address",
            "name": "account",
            "type": "address"
          }
        ],
        "name": "hasRole",
        "outputs": [
          {
            "internalType": "bool",
            "name": "",
            "type": "bool"
          }
        ],
        "stateMutability": "view",
        "type": "function"
      },
      {
        "inputs": [
          {
            "internalType": "address",
            "name": "",
            "type": "address"
          },
          {
            "internalType": "uint256",
            "name": "",
            "type": "uint256"
          }
        ],
        "name": "identityCredentials",
        "outputs": [
          {
            "internalType": "bytes32",
            "name": "",
            "type": "bytes32"
          }
        ],
        "stateMutability": "view",
        "type": "function"
      },
      {
        "inputs": [
          {
            "internalType": "address",
            "name": "identity",
            "type": "address"
          }
        ],
        "name": "identityOwner",
        "outputs": [
          {
            "internalType": "address",
            "name": "",
            "type": "address"
          }
        ],
        "stateMutability": "pure",
        "type": "function"
      },
      {
        "inputs": [
          {
            "internalType": "bytes32",
            "name": "credentialId",
            "type": "bytes32"
          }
        ],
        "name": "isCredentialRevoked",
        "outputs": [
          {
            "internalType": "bool",
            "name": "",
            "type": "bool"
          }
        ],
        "stateMutability": "view",
        "type": "function"
      },
      {
        "inputs": [
          {
            "internalType": "address",
            "name": "",
            "type": "address"
          }
        ],
        "name": "isKYCVerified",
        "outputs": [
          {
            "internalType": "bool",
            "name": "",
            "type": "bool"
          }
        ],
        "stateMutability": "view",
        "type": "function"
      },
      {
        "inputs": [
          {
            "internalType": "bytes32",
            "name": "credentialId",
            "type": "bytes32"
          },
          {
            "internalType": "address",
            "name": "subject",
            "type": "address"
          },
          {
            "internalType": "bytes32",
            "name": "credentialHash",
            "type": "bytes32"
          }
        ],
        "name": "issueCredential",
        "outputs": [
          {
            "internalType": "bool",
            "name": "",
            "type": "bool"
          }
        ],
        "stateMutability": "nonpayable",
        "type": "function"
      },
      {
        "inputs": [
          {
            "internalType": "address",
            "name": "",
            "type": "address"
          }
        ],
        "name": "lastActivity",
        "outputs": [
          {
            "internalType": "uint256",
            "name": "",
            "type": "uint256"
          }
        ],
        "stateMutability": "view",
        "type": "function"
      },
      {
        "inputs": [],
        "name": "pause",
        "outputs": [],
        "stateMutability": "nonpayable",
        "type": "function"
      },
      {
        "inputs": [],
        "name": "paused",
        "outputs": [
          {
            "internalType": "bool",
            "name": "",
            "type": "bool"
          }
        ],
        "stateMutability": "view",
        "type": "function"
      },
      {
        "inputs": [
          {
            "internalType": "bytes32",
            "name": "role",
            "type": "bytes32"
          },
          {
            "internalType": "address",
            "name": "callerConfirmation",
            "type": "address"
          }
        ],
        "name": "renounceRole",
        "outputs": [],
        "stateMutability": "nonpayable",
        "type": "function"
      },
      {
        "inputs": [
          {
            "internalType": "bytes32",
            "name": "credentialId",
            "type": "bytes32"
          },
          {
            "internalType": "address",
            "name": "subject",
            "type": "address"
          },
          {
            "internalType": "string",
            "name": "reason",
            "type": "string"
          }
        ],
        "name": "restoreCredential",
        "outputs": [],
        "stateMutability": "nonpayable",
        "type": "function"
      },
      {
        "inputs": [
          {
            "internalType": "address",
            "name": "identity",
            "type": "address"
          },
          {
            "internalType": "bytes32",
            "name": "name",
            "type": "bytes32"
          },
          {
            "internalType": "bytes",
            "name": "value",
            "type": "bytes"
          }
        ],
        "name": "revokeAttribute",
        "outputs": [],
        "stateMutability": "nonpayable",
        "type": "function"
      },
      {
        "inputs": [
          {
            "internalType": "bytes32",
            "name": "credentialId",
            "type": "bytes32"
          },
          {
            "internalType": "address",
            "name": "subject",
            "type": "address"
          },
          {
            "internalType": "string",
            "name": "reason",
            "type": "string"
          }
        ],
        "name": "revokeCredential",
        "outputs": [],
        "stateMutability": "nonpayable",
        "type": "function"
      },
      {
        "inputs": [
          {
            "internalType": "address",
            "name": "identity",
            "type": "address"
          },
          {
            "internalType": "bytes32",
            "name": "delegateType",
            "type": "bytes32"
          },
          {
            "internalType": "address",
            "name": "delegate",
            "type": "address"
          }
        ],
        "name": "revokeDelegate",
        "outputs": [],
        "stateMutability": "nonpayable",
        "type": "function"
      },
      {
        "inputs": [
          {
            "internalType": "bytes32",
            "name": "role",
            "type": "bytes32"
          },
          {
            "internalType": "address",
            "name": "account",
            "type": "address"
          }
        ],
        "name": "revokeRole",
        "outputs": [],
        "stateMutability": "nonpayable",
        "type": "function"
      },
      {
        "inputs": [
          {
            "internalType": "address",
            "name": "identity",
            "type": "address"
          },
          {
            "internalType": "bytes32",
            "name": "name",
            "type": "bytes32"
          },
          {
            "internalType": "bytes",
            "name": "value",
            "type": "bytes"
          },
          {
            "internalType": "uint256",
            "name": "validity",
            "type": "uint256"
          }
        ],
        "name": "setAttribute",
        "outputs": [],
        "stateMutability": "nonpayable",
        "type": "function"
      },
      {
        "inputs": [
          {
            "internalType": "address",
            "name": "identity",
            "type": "address"
          },
          {
            "internalType": "bool",
            "name": "verified",
            "type": "bool"
          }
        ],
        "name": "setKYCStatus",
        "outputs": [],
        "stateMutability": "nonpayable",
        "type": "function"
      },
      {
        "inputs": [
          {
            "internalType": "bytes4",
            "name": "interfaceId",
            "type": "bytes4"
          }
        ],
        "name": "supportsInterface",
        "outputs": [
          {
            "internalType": "bool",
            "name": "",
            "type": "bool"
          }
        ],
        "stateMutability": "view",
        "type": "function"
      },
      {
        "inputs": [],
        "name": "totalCredentials",
        "outputs": [
          {
            "internalType": "uint256",
            "name": "",
            "type": "uint256"
          }
        ],
        "stateMutability": "view",
        "type": "function"
      },
      {
        "inputs": [],
        "name": "totalDIDs",
        "outputs": [
          {
            "internalType": "uint256",
            "name": "",
            "type": "uint256"
          }
        ],
        "stateMutability": "view",
        "type": "function"
      },
      {
        "inputs": [],
        "name": "totalOperations",
        "outputs": [
          {
            "internalType": "uint256",
            "name": "",
            "type": "uint256"
          }
        ],
        "stateMutability": "view",
        "type": "function"
      },
      {
        "inputs": [],
        "name": "totalRevokedCredentials",
        "outputs": [
          {
            "internalType": "uint256",
            "name": "",
            "type": "uint256"
          }
        ],
        "stateMutability": "view",
        "type": "function"
      },
      {
        "inputs": [],
        "name": "totalVerifiedDIDs",
        "outputs": [
          {
            "internalType": "uint256",
            "name": "",
            "type": "uint256"
          }
        ],
        "stateMutability": "view",
        "type": "function"
      },
      {
        "inputs": [],
        "name": "unpause",
        "outputs": [],
        "stateMutability": "nonpayable",
        "type": "function"
      },
      {
        "inputs": [
          {
            "internalType": "address",
            "name": "identity",
            "type": "address"
          },
          {
            "internalType": "string",
            "name": "newDidDocument",
            "type": "string"
          }
        ],
        "name": "updateDIDDocument",
        "outputs": [],
        "stateMutability": "nonpayable",
        "type": "function"
      },
      {
        "inputs": [
          {
            "internalType": "address",
            "name": "identity",
            "type": "address"
          },
          {
            "internalType": "bytes32",
            "name": "delegateType",
            "type": "bytes32"
          },
          {
            "internalType": "address",
            "name": "delegate",
            "type": "address"
          }
        ],
        "name": "validDelegate",
        "outputs": [
          {
            "internalType": "bool",
            "name": "",
            "type": "bool"
          }
        ],
        "stateMutability": "view",
        "type": "function"
      },
      {
        "inputs": [
          {
            "internalType": "address",
            "name": "identity",
            "type": "address"
          },
          {
            "internalType": "bytes32",
            "name": "delegateType",
            "type": "bytes32"
          },
          {
            "internalType": "address",
            "name": "delegate",
            "type": "address"
          }
        ],
        "name": "validDelegateFrom",
        "outputs": [
          {
            "internalType": "uint256",
            "name": "",
            "type": "uint256"
          }
        ],
        "stateMutability": "view",
        "type": "function"
      }
    ],
    "bytecode": "",
    "constructor_args": [
      "0xb40061c7bf8394eb130fcb5ea06868064593bfaa"
    ],
    "compiler_version": "v0.8.19",
    "optimization_enabled": true,
    "optimization_runs": 200,
    "license_type": "MIT",
    "tags": [],
    "metadata": {}
  },
  "gas_used": 2466674,
  "timestamp": "2025-09-19T20:12:56Z",
  "tx_hash": "0x3c9a7ada8203febf39e0a1ee5c23f67f4ab6725c4fe36948e714334f37615f9d"
}