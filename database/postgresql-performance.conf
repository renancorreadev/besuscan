# PostgreSQL Performance Configuration for Blockchain Indexing
# Otimizado para alta performance de ingestão e consulta de dados blockchain

# =============================================================================
# MEMORY SETTINGS
# =============================================================================

# Shared buffers - 25% da RAM total (ajustar conforme RAM disponível)
shared_buffers = 2GB

# Work memory for sorting/hashing operations
work_mem = 256MB

# Maintenance work memory for VACUUM, CREATE INDEX, etc.
maintenance_work_mem = 1GB

# Effective cache size - 75% da RAM total
effective_cache_size = 6GB

# =============================================================================
# WAL (Write-Ahead Logging) SETTINGS - Crucial para performance de escrita
# =============================================================================

# WAL level for replication
wal_level = replica

# WAL buffers - higher for high-write workloads
wal_buffers = 64MB

# Checkpoint settings - otimizado para alta taxa de escrita
checkpoint_timeout = 15min
checkpoint_completion_target = 0.9
max_wal_size = 4GB
min_wal_size = 1GB

# WAL writer settings
wal_writer_delay = 10ms
wal_writer_flush_after = 1MB

# =============================================================================
# BACKGROUND WRITER SETTINGS
# =============================================================================

# Background writer for dirty pages
bgwriter_delay = 10ms
bgwriter_lru_maxpages = 1000
bgwriter_lru_multiplier = 10.0
bgwriter_flush_after = 512kB

# =============================================================================
# AUTOVACUUM SETTINGS - Importante para manter performance
# =============================================================================

# Enable autovacuum
autovacuum = on
autovacuum_max_workers = 6
autovacuum_naptime = 15s

# More aggressive autovacuum for high-write tables
autovacuum_vacuum_threshold = 1000
autovacuum_vacuum_scale_factor = 0.05
autovacuum_analyze_threshold = 1000
autovacuum_analyze_scale_factor = 0.02

# =============================================================================
# CONNECTION SETTINGS
# =============================================================================

# Max connections
max_connections = 200

# Connection pooling settings
shared_preload_libraries = 'pg_stat_statements'

# =============================================================================
# QUERY PLANNER SETTINGS
# =============================================================================

# Random page cost - lower for SSDs
random_page_cost = 1.1

# Effective IO concurrency for SSDs
effective_io_concurrency = 200

# =============================================================================
# LOGGING SETTINGS - Para monitoramento de performance
# =============================================================================

# Log slow queries
log_min_duration_statement = 1000  # Log queries > 1 second
log_checkpoints = on
log_connections = on
log_disconnections = on
log_lock_waits = on

# Log statement statistics
shared_preload_libraries = 'pg_stat_statements'
pg_stat_statements.track = all
pg_stat_statements.max = 10000

# =============================================================================
# SPECIFIC OPTIMIZATIONS FOR BLOCKCHAIN DATA
# =============================================================================

# Increase max_locks_per_transaction for batch operations
max_locks_per_transaction = 256

# Increase max_pred_locks_per_transaction for complex queries
max_pred_locks_per_transaction = 256

# Optimize for sequential scans (common in blockchain analysis)
seq_page_cost = 1.0

# =============================================================================
# PARALLEL QUERY SETTINGS
# =============================================================================

# Enable parallel queries
max_parallel_workers_per_gather = 4
max_parallel_workers = 8
max_parallel_maintenance_workers = 4

# =============================================================================
# ADDITIONAL OPTIMIZATIONS
# =============================================================================

# Timezone
timezone = 'UTC'

# Locale
lc_messages = 'C'
lc_monetary = 'C'
lc_numeric = 'C'
lc_time = 'C'

# Default statistics target for better query planning
default_statistics_target = 1000

# =============================================================================
# NOTES FOR IMPLEMENTATION:
# =============================================================================
# 1. Adjust memory settings based on your server's RAM
# 2. Monitor pg_stat_statements for query optimization
# 3. Consider partitioning large tables (blocks, transactions)
# 4. Create appropriate indexes for your query patterns
# 5. Use EXPLAIN ANALYZE to optimize slow queries
# 6. Consider using connection pooling (pgBouncer, pgPool)
# ============================================================================= 